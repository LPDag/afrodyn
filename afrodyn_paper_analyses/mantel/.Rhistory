install.packages("biogeobears")
install.packages("BioGeoBEARS")
q()
setwd("~")
source("~/programs/Multi-DICE-master/MultiDICE/R/Multi-DICE-1.0.1.R")
output=dice.sims(num.sims=100, num.taxa=3, num.haploid.samples=14,
num.ind.sites=280, tau.psi.prior=c(1), tau.zeta.prior=c(1:10)/10,
tau.shared.prior=c(1000:1000000), epsilon.idio.prior=c(1000:10000)/100000,
NE.idio.prior=c(1000:100000), fsc2path='/home/helmstet/programs/fsc26_linux64/fsc26', output.directory='/home/helmstet/multi_dice/co1')
output=dice.sims(num.sims=100, num.taxa=3, num.haploid.samples=14,
num.ind.sites=280, tau.psi.prior=c(1), tau.zeta.prior=c(1:10)/10,
tau.shared.prior=c(1000:1000000), epsilon.idio.prior=c(1000:10000)/100000,
NE.idio.prior=c(1000:100000), fsc2path='/home/helmstet/programs/fsc26_linux64/fsc26', output.directory='/home/helmstet/multi_dice/co1')
fsc
fsc<-read.table("multi_dice/obs_fsc.txt")
fsc<-fsc[,2:8]
#normalize so rows total to 1
for(i in 1:length(fsc$V2)){
fsc[i,]<-fsc[i,]/sum(fsc[i,])
}
fsc
#Sim aSFS
system("mkdir multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",input.base = "pop",
output.directory="mkdir multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",input.files = c("pop1","pop2","pop4"),
output.directory="mkdir multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",input.files = c("pop1","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("pop3","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("asd","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop1",
output.directory="multi_dice/test")
list()
list("pop1","pop2")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = list("pop1","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = list("pop1","pop2","pop4"),
output.directory="multi_dice/test")
list("pop1","pop2","pop4")
?dice.aSFS
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = list("pop1","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.base = "pop",
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop1",
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop2",
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop3",
output.directory="multi_dice/test")
dice.aSFS(num.sims=3, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop3",
output.directory="multi_dice/test")
dice.aSFS(num.sims=3, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/pop3",
output.directory="multi_dice/test")
dice.aSFS(num.sims=3, num.taxa=1, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = "pop3",
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("pop1","pop2","pop3"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("pop1","pop2","pop3"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("pop1","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/fastsimcoal2/multi_dice/",
input.files = c("pop1","pop2","pop4"),
output.directory="multi_dice/test")
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
output.directory="multi_dice/test")
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(15))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(7))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
dice.aSFS(num.sims=1, num.taxa=3, num.haploid.samples=14,
input.directory = "/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs"),
output.directory="multi_dice/test")
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(2), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(2), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=(14,14,14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=c(14,14,14))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=1)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=2)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=3)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=4)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=5)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=5)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=7)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=6)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=5)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=4)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=0, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=F, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
dice.aSFS
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
rm(list=ls())
setwd("~")
source("~/programs/Multi-DICE-master/MultiDICE/R/Multi-DICE-1.0.1.R")
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=3)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=2)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=5)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=c(3), num.haploid.samples=17)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=3, num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=3, num.haploid.samples=14)
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/",
input.files = c("pop1-14.sfs","pop2-14.sfs","pop4-14.sfs"),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=1, num.taxa=3, num.haploid.samples=14)
target
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/", input.files=c('amax_GULF.SFS','grac_ETE.SFS','grac_KIM.SFS','grac_WTE.SFS','mund_ETE.SFS','rufi_TE.SFS','amax_WTEK.SFS','mund_broad.SFS','rufi_KIM.SFS','amax_ETE.SFS'),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=3, num.taxa=c(6,3,1), num.haploid.samples=c(12,24,46))
target=dice.aSFS(input.directory="/home/helmstet/programs/easySFS/output/dadi/multi_dice/", input.files=c('amax_GULF.SFS','grac_ETE.SFS','grac_KIM.SFS','grac_WTE.SFS','mund_ETE.SFS','rufi_TE.SFS','amax_WTEK.SFS','mund_broad.SFS','rufi_KIM.SFS','amax_ETE.SFS'),
folded=T, remove.afclasses=NULL, num.sims=1, num.partitions=3, num.taxa=c(6,3,1), num.haploid.samples=c(12,24,46))
library(ape)
phy<-read.nexus("~/Bureau/temp/back_1590354/back.tree")
plot(phy)
library(phylotools)
asd<-read.csv("~/Dropbox/projects/AJH_AFRODYN/back/sub_labels.csv")
phy<-sub.taxa.label(phy,asd)
plot(phy)
map('world', xlim=c(2,18), ylim=c(-8,8), col='gray90', fill=TRUE)
library(maps)
map('world', xlim=c(2,18), ylim=c(-8,8), col='gray90', fill=TRUE)
map('world', xlim=c(2,18), ylim=c(-8,8), col='gray90', fill=TRUE)
map.axes() #Add axes
palette(hue_pal()(11))
points(as.numeric(as.character(coords$ddlong)),as.numeric(as.character(coords$ddlat)),col=factor(x$dapc),pch=16,cex=2)
read.tree("~/Dropbox/projects/AJH_AFRODYN/annickia/raxml_anni_out_1563514/RAxML_bipartitions.anni")
library(ape)
phy<-read.tree("~/Dropbox/projects/AJH_AFRODYN/annickia/raxml_anni_out_1563514/RAxML_bipartitions.anni")
phy$tip.label
data.frame(phy$tip.label
)
phy<-read.nexus("~/Dropbox/projects/AJH_AFRODYN/back/back.tree")
plot(phy)
library(ape)
phy<-read.nexus("~/Dropbox/projects/AJH_AFRODYN/back/back.tree")
plot(phy)
install.packages("ape")
library(ape)
phy<-read.nexus("~/Dropbox/projects/AJH_AFRODYN/back/back.tree")
plot(phy)
phy$tip.label
phy<-read.nexus("~/Dropbox/projects/AJH_AFRODYN/back_palms/combine_back_palms_mats.tree")
plot(phy)
library(ape)
read.tree("~/Dropbox/projects/AJH_AFRODYN/anonidium/raxml_anon_out_3345625/RAxML_bipartitions.anon_out")
phy<-read.tree("~/Dropbox/projects/AJH_AFRODYN/anonidium/raxml_anon_out_3345625/RAxML_bipartitions.anon_out")
phy$tip.label
phy<-root(phy,"I12_T94")
plot(phy)
nodelabels()
phy<-root(phy,node = 112)
plot(phy)
makeChronosCalib(phy, node = "root", age.min = 2.7546,
age.max = 3.90321, interactive = FALSE, soft.bounds = FALSE)
phycal<-makeChronosCalib(phy, node = "root", age.min = 2.7546,
age.max = 3.90321, interactive = FALSE, soft.bounds = FALSE)
chronos.control()
chronos(phy, lambda = 1, model = "correlated", quiet = FALSE,
calibration = makeChronosCalib(phy, node = "root", age.min = 2.7546,
age.max = 3.90321, interactive = FALSE, soft.bounds = FALSE),
control = chronos.control())
calphy<-chronos(phy, lambda = 1, model = "correlated", quiet = FALSE,
calibration = makeChronosCalib(phy, node = "root", age.min = 2.7546,
age.max = 3.90321, interactive = FALSE, soft.bounds = FALSE),
control = chronos.control())
plot(calphy)
install.packages(phylotools)
install.packages("phylotools")
install.packages("phytools")
library("coda")
library("strap")
install.packages("strap")
installed.packages("devtools")
library(devtools)
install.packages("devtools")
library(devtools)
install_github("https://github.com/fmichonneau/phyloch")
library("phytools")
library("phyloch")
library("strap")
library("coda")
geoscalePhylo(tree=ladderize(calphy,right = T), units=c("Epoch"), boxes="Epoch",   cex.tip=0.75, cex.age=0.75, cex.ts=0.75, label.offset=0.5,lwd=3)
calphy$root.time <- max(branching.times(calphy))
geoscalePhylo(tree=ladderize(calphy,right = T), units=c("Epoch"), boxes="Epoch",   cex.tip=0.75, cex.age=0.75, cex.ts=0.75, label.offset=0.5,lwd=3)
calphy
calphy$edge.length
calphy$root.time <- max(calphy$edge.length)
geoscalePhylo(tree=ladderize(calphy,right = T), units=c("Epoch"), boxes="Epoch",   cex.tip=0.75, cex.age=0.75, cex.ts=0.75, label.offset=0.5,lwd=3)
install_github("https://github.com/GuangchuangYu/ggtree")
library("ggtree")
ggtree(calphy) + theme_tree2()
class(calphy)
calphy
write.tree(calphy,"test.tree")
read.tree("test.tree")
foo<-read.tree("test.tree")
plot(foo)
ggtree(foo) + theme_tree2()
p1<-revts(p)
p<-ggtree(foo) + theme_tree2()
p1<-revts(p)
p1
p2<- p1 + geom_text(aes(x=max(x), label=label), size=1, color=cols, hjust=-.3) +
scale_x_continuous(breaks=c(0,-15,-30,-45,-60), minor_breaks=seq(0, -60, -5)) +
geom_segment(aes(xend=max(x)+.20, yend=y), linetype="dotted", size=.1, color=cols) +
theme(panel.grid.major   = element_line(color="black", size=.2),
panel.grid.minor   = element_line(color="grey", size=.2),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
p2<- p1 + geom_text(aes(x=max(x), label=label), size=1, hjust=-.3) +
scale_x_continuous(breaks=c(0,-15,-30,-45,-60), minor_breaks=seq(0, -60, -5)) +
geom_segment(aes(xend=max(x)+.20, yend=y), linetype="dotted", size=.1, color=cols) +
theme(panel.grid.major   = element_line(color="black", size=.2),
panel.grid.minor   = element_line(color="grey", size=.2),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
rm(list=ls())
install.packages("ggplot2")
install.packages("ggplot2")
load("~/Dropbox/projects/AJH_hazel/populations/r75_maf_vcf/import_vcf_remove_noncorylus_pca.RData")
vcf
aa.genlight
rm(list=ls())
load("~/Dropbox/projects/AJH_hazel/populations/r75_maf_vcf/import_vcf_remove_noncorylus_pca.RData")
#remove duplicates
dups<-c("115","242","173","243","160","281","055","065","175")
aa.genind <- aa.genind[!(indNames(aa.genind) %in% dups)]
#separate populations
sep<-seppop(aa.genind)
het<-matrix(1,6)
for(i in 1:6){
div<-summary(sep[[i]])
het<-cbind(het,
c(mean(na.omit(div$Hexp)),
mean(na.omit(div$Hobs)),
sd(na.omit(div$Hexp)),
sd(na.omit(div$Hobs)),
sd(na.omit(div$Hexp))/sqrt(sum(!is.na(na.omit(div$Hexp)))),
sd(na.omit(div$Hobs))/sqrt(sum(!is.na(na.omit(div$Hobs))))
))
}
het
data.frame(aa.genind@pop)
aa.genind <- aa.genind[!(indNames(aa.genind) %in% dups)]
data.frame(aa.genind@pop)
#separate populations
sep<-seppop(aa.genind)
het<-matrix(1,6)
for(i in 1:6){
div<-summary(sep[[i]])
het<-cbind(het,
c(mean(na.omit(div$Hexp)),
mean(na.omit(div$Hobs)),
sd(na.omit(div$Hexp)),
sd(na.omit(div$Hobs)),
sd(na.omit(div$Hexp))/sqrt(sum(!is.na(na.omit(div$Hexp)))),
sd(na.omit(div$Hobs))/sqrt(sum(!is.na(na.omit(div$Hobs))))
))
}
het
7.8+10.1
17.9/2
install.packages(c("corpus",
"crayon",
"data.table",
"ggplot2",
"pdftools",
"qdap",
"qdapDictio",
"qdapRegex",
"qdapTools",
"quanteda",
"RColorBrewer",
"readtext",
"reshape2",
"rmarkdown",
"stringi",
"tm"))
install.packages('wordcloud')
install.packages('wordcloud')
install.packages('qdap')
install.packages('readtext')
library("devtools")
install_github("ajhelmstetter/papieRmache")
instal.packages("ndjson")
install.packages("ndjson")
install_github("ajhelmstetter/papieRmache")
library(papieRmache)
rm(list=ls())
setwd("~/Dropbox/projects/AJH_AFRODYN/mantel/")
library(distancetocoast)
library(raster)
library(maps)
library(GSIF)
library(assigner)
library(radiator)
library("adegenet")
library(codep)
library(adespatial)
library(car)
library(vcfR)
library(elevatr)
library(raster)
library(maps)
library(GSIF)
library("rnaturalearth")
library("rnaturalearthdata")
library("hierfstat")
library("pegas")
library(poppr)
library(vcfR)
library(scales)
par(mar=c(3,3,3,3))
load("mantel.Rdata")
dist(locs_list[[i]][,c(2:3)])
hist(dist(locs_list[[i]][,c(2:3)]))
par(mar=c(2,3))
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
}
par(mfrow=c(2,3))
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
}
dev.off()
par(mfrow=c(2,3))
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
}
par(mfrow=c(3,3))
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
}
mean(dist(locs_list[[i]][,c(2:3)]))
par(mfrow=c(3,3))
m<-vector()
s<-vector()
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
m[i]<-mean(dist(locs_list[[i]][,c(2:3)]))
s[i]<-sd(dist(locs_list[[i]][,c(2:3)]))
}
data.frame(m,s)
data.frame(m,s,row.names = sp)
data.frame(m,s,row.names = spe)
par(mfrow=c(3,3))
avg<-vector()
stdev<-vector()
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]))
avg[i]<-mean(dist(locs_list[[i]][,c(2:3)]))
stdev[i]<-sd(dist(locs_list[[i]][,c(2:3)]))
}
data.frame(avg,stdev,row.names = spe)
hist(dist(locs_list[[i]][,c(2:3)]),main=NA)
par(mfrow=c(3,3))
avg<-vector()
stdev<-vector()
for(i in 1:length(locs_list)){
hist(dist(locs_list[[i]][,c(2:3)]),main=spe[i],xlab="pairwise geographic distance")
avg[i]<-mean(dist(locs_list[[i]][,c(2:3)]))
stdev[i]<-sd(dist(locs_list[[i]][,c(2:3)]))
}
data.frame(avg,stdev,row.names = spe)
