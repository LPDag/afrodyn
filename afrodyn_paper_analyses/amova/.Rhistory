###
# CALCULATE BINARY THRESHOLDS (CLIM/MALEY)
###
bin_df <-
cbind(
as.character(locs_list[[i]]$index),
#difference between past/present clim (absolute)
clim_df > summary(clim_df)[3],
#3 = median, #4 = mean, #5 = 3rd quant
enm_df,
# distance from refugia centroid
maley_df > summary(maley_df)[3] #2 = 1st quant, #3 = median, #4 = mean, #5 = 3rd quant
)
bin_list[[i]] <- bin_df
### convert to genlight
aa.genind <- vcfR2genind(vcfs[[i]])
if (i == 5) {
#podo_a has 3 inds with missing coords
aa.genind <- aa.genind[1:34]
}
distgenEUCL <-
dist(
aa.genind,
method = "euclidean",
diag = FALSE,
upper = FALSE,
p = 2
)
bin_df <- data.frame(bin_list[[i]])
colnames(bin_df) <- c("index", "clim", "enm", "maley")
strata(aa.genind) <- data.frame(bin_df[, 2])
names(strata(aa.genind)) <- "clim"
aa.genclone <- as.genclone(aa.genind)
#Data with mixed ploidy or ambiguous allele dosage cannot have within-individual variance calculated until the dosage is correctly estimated.
res_amova <- poppr.amova(aa.genclone, ~ clim)
list_amova[[i]] <- res_amova
res_amova_signif   <- randtest(res_amova, nrepet = 999)
plot(res_amova_signif, main = paste(names(vcfs)[i], "signif", sep = ""))
list_amova_signif[[i]] <- res_amova_signif
###
#randomized population structure
###
aa.genclone.new <- aa.genclone
new_df <-
data.frame(strata(aa.genclone)[sample(nInd(aa.genclone)), 1])
names(new_df) <- "clim"
strata(aa.genclone.new) <- new_df
aa.genclone.amova <- poppr.amova(aa.genclone.new, ~ clim)
list_rand_amova[[i]] <- aa.genclone.amova
aa.genclone.amova.test <-
randtest(aa.genclone.amova, nrepet = 999)
list_rand_amova_signif[[i]] <- aa.genclone.amova.test
plot(aa.genclone.amova.test,
main = paste(names(vcfs)[i], "random signif", sep = " "))
#dev.off()
}
dev.off()
for (p in 1:length(list_amova)) {
foo <-
cbind(list_amova[[p]]$componentsofcovariance,
rep(sp[p], 3),
list_amova_signif[[p]]$pvalue)
if (p == 1) {
res_cov <- foo
} else {
res_cov <- rbind(res_cov, foo)
}
}
res_cov_clim <- res_cov
colnames(res_cov_clim) <- c("sigma", "percentage", "sp", "p")
write.csv(res_cov_clim, "res_cov_clim.csv")
save.image("clim_refugia.Rdata")
#######################################
# enm-based refugia
#######################################
list_amova <- list()
list_amova_signif <- list()
list_rand_amova <- list()
list_rand_amova_signif <- list()
#check whether names of genind are in right order compared to location tables
par(mfrow = c(1, 3))
for (i in 1:length(vcfs)) {
pdf(paste(names(vcfs)[i], "_refugia_enm.pdf", sep = ""))
### convert to genlight
aa.genind <- vcfR2genind(vcfs[[i]])
if (i == 5) {
aa.genind <- aa.genind[1:34]
#podo_a has 3 inds with missing coords
list_amova[[i]]<-NA
list_amova_signif[[i]]<-NA
list_rand_amova[[i]]<-NA
list_rand_amova_signif[[i]]<-NA
} else {
clim_df <- extract(comb_stab, locs_list[[i]][, 2:3])
enm_df <- extract(enm_stab, locs_list[[i]][, 2:3])
maley_df <- extract(d2, locs_list[[i]][, 2:3])
###
# CALCULATE BINARY THRESHOLDS (CLIM/MALEY)
###
bin_df <-
cbind(
as.character(locs_list[[i]]$index),
#difference between past/present clim (absolute)
clim_df > summary(clim_df)[3],
#3 = median, #4 = mean, #5 = 3rd quant
enm_df,
# distance from refugia centroid
maley_df > summary(maley_df)[3] #2 = 1st quant, #3 = median, #4 = mean, #5 = 3rd quant
)
bin_list[[i]] <- bin_df
distgenEUCL <-
dist(
aa.genind,
method = "euclidean",
diag = FALSE,
upper = FALSE,
p = 2
)
bin_df <- data.frame(bin_list[[i]])
colnames(bin_df) <- c("index", "clim", "enm", "maley")
strata(aa.genind) <- data.frame(bin_df[, 3])
names(strata(aa.genind)) <- "enm"
aa.genclone <- as.genclone(aa.genind)
table(strata(aa.genclone, ~ enm))
#Data with mixed ploidy or ambiguous allele dosage cannot have within-individual variance calculated until the dosage is correctly estimated.
res_amova <- poppr.amova(aa.genclone, ~ enm)
list_amova[[i]] <- res_amova
res_amova_signif   <- randtest(res_amova, nrepet = 999)
plot(res_amova_signif, main = "list_amova_signif")
list_amova_signif[[i]] <- res_amova_signif
###
#randomized population structure
###
aa.genclone.new <- aa.genclone
new_df <-
data.frame(strata(aa.genclone)[sample(nInd(aa.genclone)), 1])
names(new_df) <- "enm"
strata(aa.genclone.new) <- new_df
aa.genclone.amova <- poppr.amova(aa.genclone.new, ~ enm)
list_rand_amova[[i]] <- aa.genclone.amova
aa.genclone.amova.test <-
randtest(aa.genclone.amova, nrepet = 999)
list_rand_amova_signif[[i]] <- aa.genclone.amova.test
plot(aa.genclone.amova.test, main = "list_rand_amova_signif")
}
dev.off()
}
for (p in c(1, 2, 3, 4, 6, 7)) {
foo <-
cbind(list_amova[[p]]$componentsofcovariance,
rep(sp[p], 3),
list_amova_signif[[p]]$pvalue)
if (p == 1) {
res_cov <- foo
} else {
res_cov <- rbind(res_cov, foo)
}
}
res_cov_enm <- res_cov
colnames(res_cov_enm) <- c("sigma", "percentage", "sp", "p")
write.csv(res_cov_enm, "res_cov_enm.csv")
save.image("enm_refugia.Rdata")
###
# maley-based refugia
###
list_amova <- list()
list_amova_signif <- list()
list_rand_amova <- list()
list_rand_amova_signif <- list()
#check whether names of genind are in right order compared to location tables
par(mfrow = c(1, 3))
for (i in 1:length(vcfs)) {
pdf(paste(names(vcfs)[i], "_refugia_maley.pdf", sep = ""))
clim_df <- extract(comb_stab, locs_list[[i]][, 2:3])
enm_df <- extract(enm_stab, locs_list[[i]][, 2:3])
maley_df <- extract(d2, locs_list[[i]][, 2:3])
###
# CALCULATE BINARY THRESHOLDS (CLIM/MALEY)
###
bin_df <-
cbind(
as.character(locs_list[[i]]$index),
#difference between past/present clim (absolute)
clim_df > summary(clim_df)[3],
#3 = median, #4 = mean, #5 = 3rd quant
enm_df,
# distance from refugia centroid
maley_df > summary(maley_df)[3] #2 = 1st quant, #3 = median, #4 = mean, #5 = 3rd quant
)
bin_list[[i]] <- bin_df
### convert to genlight
aa.genind <- vcfR2genind(vcfs[[i]])
if (i == 5) {
#podo_a has 3 inds with missing coords
aa.genind <- aa.genind[1:34]
}
distgenEUCL <-
dist(
aa.genind,
method = "euclidean",
diag = FALSE,
upper = FALSE,
p = 2
)
bin_df <- data.frame(bin_list[[i]])
colnames(bin_df) <- c("index", "clim", "enm", "maley")
strata(aa.genind) <- data.frame(bin_df[, 4])
names(strata(aa.genind)) <- "maley"
aa.genclone <- as.genclone(aa.genind)
#Data with mixed ploidy or ambiguous allele dosage cannot have within-individual variance calculated until the dosage is correctly estimated.
res_amova <- poppr.amova(aa.genclone, ~ maley)
list_amova[[i]] <- res_amova
res_amova_signif   <- randtest(res_amova, nrepet = 999)
plot(res_amova_signif, main = "list_amova_signif")
list_amova_signif[[i]] <- res_amova_signif
###
#randomized population structure
###
aa.genclone.new <- aa.genclone
new_df <-
data.frame(strata(aa.genclone)[sample(nInd(aa.genclone)), 1])
names(new_df) <- "maley"
strata(aa.genclone.new) <- new_df
aa.genclone.amova <- poppr.amova(aa.genclone.new, ~ maley)
list_rand_amova[[i]] <- aa.genclone.amova
aa.genclone.amova.test <-
randtest(aa.genclone.amova, nrepet = 999)
list_rand_amova_signif[[i]] <- aa.genclone.amova.test
plot(aa.genclone.amova.test, main = "list_rand_amova_signif")
}
dev.off()
for (p in 1:length(list_amova)) {
foo <-
cbind(list_amova[[p]]$componentsofcovariance,
rep(sp[p], 3),
list_amova_signif[[p]]$pvalue)
if (p == 1) {
res_cov <- foo
} else {
res_cov <- rbind(res_cov, foo)
}
}
res_cov_maley <- res_cov
colnames(res_cov_maley) <- c("sigma", "percentage", "sp", "p")
write.csv(res_cov_maley, "res_cov_maley.csv")
save.image("maley_refugia.Rdata")
###############################
# GROUPED BARPLOT
###############################
bet_clim <- res_cov_clim[grep("Between", rownames(res_cov_clim)), ]
bet_enm <- res_cov_enm[grep("Between", rownames(res_cov_enm)), ]
bet_enm$sp<-as.character(bet_enm$sp)
bet_enm<-rbind(bet_enm[c(1:4), ], c(0,0,"podoa",1), bet_enm[c(5:6), ])
bet_enm$sp<-as.factor(bet_enm$sp)
bet_enm$percentage<-as.numeric(bet_enm$percentage)
bet_enm$p<-as.numeric(bet_enm$p)
bet_enm$sigma<-as.numeric(bet_enm$sigma)
bet_maley <- res_cov_maley[grep("Between", rownames(res_cov_maley)), ]
bet <- rbind(bet_clim, bet_enm, bet_maley)
ref_type <- c(rep("clim", length(bet_clim$sigma)),
rep("enm", length(bet_enm$sigma)),
rep("maley", length(bet_maley$sigma)))
ref_type_bet <- cbind(ref_type, bet)
# library
library(ggplot2)
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity") + xlab("Model type")  + ylab("% variance explained by refugia")
save.image("refugia_amova.Rdata")
load("~/Dropbox/projects/AJH_AFRODYN/amova/refugia_amova.Rdata")
# library
library(ggplot2)
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity") + xlab("Model type")  + ylab("% variance explained by refugia")
ref_type_bet,
ref_type_bet
label.df <- data.frame(Group = rownames(ref_type_bet),
Value = ref_type_bet$sigma+1.5)
# Grouped
p<-ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity") + xlab("Model type")  + ylab("% variance explained by refugia")
label.df <- data.frame(Group = rownames(ref_type_bet),
Value = ref_type_bet$sigma+1.5)
p + geom_text(data = label.df, label = "***")
load("~/Dropbox/projects/AJH_AFRODYN/amova/refugia_amova.Rdata")
# library
library(ggplot2)
# Grouped
p<-ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity") + xlab("Model type")  + ylab("% variance explained by refugia")
label.df <- data.frame(Group = rownames(ref_type_bet),
Value = ref_type_bet$sigma+1.5)
p + geom_text(data = label.df, label = "***")
p
load("~/Dropbox/projects/AJH_AFRODYN/amova/refugia_amova.Rdata")
# library
library(ggplot2)
# Grouped
p<-ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity") + xlab("Model type")  + ylab("% variance explained by refugia")
label.df <- data.frame(Group = rownames(ref_type_bet),
Value = ref_type_bet$sigma+1.5)
p + geom_text(data = label.df, label = "***")
label.df
label.df <- data.frame(Group = as.factor(rownames(ref_type_bet)),
Value = ref_type_bet$sigma+1.5)
p + geom_text(data = label.df, label = "***")
ref_type_bet
colnames(label.df)<-c("grp","percentage")
p + geom_text(data = label.df, label = "***")
label.df
p + geom_text(data = label.df$percentage, label = "***")
?geom_text
label.df <- data.frame(Group = 1:21),
Value = ref_type_bet$percentage+1.5)
label.df <- data.frame(Group = 1:21,
Value = ref_type_bet$percentage+1.5)
colnames(label.df)<-c("grp","percentage")
p + geom_text(data = label.df, label = "***")
ref_type_bet$sig<-rep(1,21)
# Grouped
p<-ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia")
p
p + geom_text(aes(x = sp,
y = percentage + 0.05, label = "*"))
p + geom_text(aes(x = ref_type,
y = percentage + 0.05, label = "*"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(x = ref_type,
y = percentage + 0.05, label = "*"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(x = sp,
y = percentage + 0.05, label = "*"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(percentage, `(all)`, label = sprintf("%2.1f", `(all)`)),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(percentage,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*")
)
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 0))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 0.75))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 0.8))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1.5))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = "dodge")
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position = "dodge", stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge(width = 1)), stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge(width = 1), stat = "identity", colour=1, size=ref_type_bet$sig,) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge(width = 1), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
?position_dodge
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0.1), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0.1), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1,padding = 0.1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0.1), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge2(width = 1,padding = 0.1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0.5), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) +
geom_bar(position =  position_dodge2(width = 1,padding = 0), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label="*"),
position = position_dodge2(width = 1))
position = position_dodge(width = 1)))
ref_type_bet$sig<-c("*",
"*",
"*",
"**",
"***",
"***",
"***",
"***",
"***",
"***",
"***",
"***",
"**",
"***",
"",
"***",
"***",
"***",
"**",
"**",
"***")
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia")
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = 1))
ref_type_bet$sig<-c("*",
"*",
"*",
"**",
"***",
"***",
"***",
"***",
"***",
"***",
"***",
"",
"**",
"***",
"",
"***",
"***",
"***",
"**",
"**",
"***")
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = 1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = 0.5))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = -1))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = 0.9))
p + geom_text(aes(x = ref_type,
y = percentage + 1, label = "*"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage, x = ref_type,label=sig),
position = position_dodge(width = 0.9,height=0.1))
?position_dodge
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage+1, x = ref_type,label=sig),
position = position_dodge(width = 0.9))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by refugia") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9)) + scale_x_discrete(labels=c("Climate-based stable areas","ENM-based stable areas","Maley refugia centroid"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by stable areas") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9)) + scale_x_discrete(labels=c("Climate-based stable areas","ENM-based stable areas","Maley refugia centroid")) + theme(legend.title = element_blank())
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by stable areas") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9)) + scale_x_discrete(labels=c("Climate-based stable areas","ENM-based stable areas","Maley refugia centroid")) + theme(legend.title = element_blank(),legend.text = c("A. affinis"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by stable areas") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9)) + scale_x_discrete(labels=c("Climate-based stable areas","ENM-based stable areas","Maley refugia centroid")) + theme(legend.title = element_blank(),legend.text = element_text(face = "italic")) + scale_color_discrete(labels=c("A. affinis","A. mannii","G. suaveolens","M. enghiana","P. acaulis","P. barteri","S. mannii"))
# Grouped
ggplot(ref_type_bet, aes(fill = sp, y = percentage, x = ref_type)) + geom_bar(position =  position_dodge2(width = 1,), stat = "identity", colour=1, size=0.5) + xlab("Model type")  + ylab("% variance explained by stable areas") + geom_text(aes(y = percentage+0.5, x = ref_type,label=sig),
position = position_dodge(width = 0.9)) + scale_x_discrete(labels=c("Climate-based stable areas","ENM-based stable areas","Maley refugia centroid")) + theme(legend.title = element_blank(),legend.text = element_text(face = "italic")) + scale_fill_discrete(labels=c("A. affinis","A. mannii","G. suaveolens","M. enghiana","P. acaulis","P. barteri","S. mannii"))
